% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmask.R
\docType{methods}
\name{fmask}
\alias{fmask}
\alias{fmask,Raster,sf-method}
\alias{fmask,Raster,Spatial-method}
\alias{fmask,RasterLayer,RasterLayer-method}
\alias{fmask,RasterStackBrick,RasterLayer-method}
\alias{fmask,RasterLayer,RasterStackBrick-method}
\alias{fmask,RasterStackBrick,RasterStackBrick-method}
\title{Fast masking of values in a Raster object}
\usage{
fmask(x, mask, ...)

\S4method{fmask}{Raster,sf}(x, mask, filename = "", inverse = FALSE,
  updatevalue = NA, updateNA = FALSE, ...)

\S4method{fmask}{Raster,Spatial}(x, mask, filename = "",
  inverse = FALSE, updatevalue = NA, updateNA = FALSE, ...)

\S4method{fmask}{RasterLayer,RasterLayer}(x, mask, filename = "",
  inverse = FALSE, maskvalue = NA, updatevalue = NA,
  updateNA = FALSE, ...)

\S4method{fmask}{RasterStackBrick,RasterLayer}(x, mask, filename = "",
  inverse = FALSE, maskvalue = NA, updatevalue = NA,
  updateNA = FALSE, ...)

\S4method{fmask}{RasterLayer,RasterStackBrick}(x, mask, filename = "",
  inverse = FALSE, maskvalue = NA, updatevalue = NA,
  updateNA = FALSE, ...)

\S4method{fmask}{RasterStackBrick,RasterStackBrick}(x, mask,
  filename = "", inverse = FALSE, maskvalue = NA, updatevalue = NA,
  updateNA = FALSE, ...)
}
\arguments{
\item{x}{Raster* object}

\item{mask}{Raster* object or a Spatial* object from sf or sp classes}

\item{field}{numeric or character. The value(s) to be transferred. This can
be a single number, or a vector of numbers that has the same length as the
number of spatial features (points, lines, polygons). If x is a Spatial*DataFrame,
this can be the column name of the variable to be transferred. If missing, the
attribute index is used (i.e. numbers from 1 to the number of features). You
can also provide a vector with the same length as the number of spatial features,
or a matrix where the number of rows matches the number of spatial features}

\item{fun}{function or character. To determine what values to assign to cells
that are covered by multiple spatial features. You can use functions such as
min, max, or mean, or one of the following character values: 'first', 'last',
'count'. The default value is 'last'. In the case of SpatialLines*, 'length'
is also allowed (currently for planar coordinate systems only).

If x represents points, fun must accept a na.rm argument, either explicitly or
through 'dots'. This means that fun=length fails, but fun=function(x,...)length(x)
works, although it ignores the na.rm argument. To use the na.rm argument you can
use a function like this:
fun=function(x, na.rm)if (na.rm) length(na.omit(x)) else (length(x), or use a
function that removes NA values in all cases, like this function to compute the
number of unique values per grid cell "richness":
fun=function(x, ...) {length(unique(na.omit(x)))} . If you want to count the
number of points in each grid cell, you can use fun='count' or
fun=function(x,...){length(x)}.

You can also pass multiple functions using a statement like
fun=function(x, ...) c(length(x),mean(x)), in which case the returned object
is a RasterBrick (multiple layers).}

\item{background}{numeric. Value to put in the cells that are not covered by
any of the features of x. Default is NA}

\item{by}{character.  The name of a column in `sf` by which to aggregate
layers.  If set, fasterize will return a RasterBrick with as many layers
as unique values of the `by` column.}
}
\value{
A raster of the same size, extent, resolution and projection as the
provided raster template.
}
\description{
Create a new Raster* object that has the same values as x, except for the cells
that are NA (or other maskvalue) in a 'mask'. These cells become NA (or other
updatevalue). The mask can be either another Raster* object of the same extent
and resolution, or a Spatial* object (e.g. SpatialPolygons) in which case all
cells that are not covered by the Spatial object are set to updatevalue. You
can use inverse=TRUE to set the cells that are not NA (or other maskvalue) in
the mask, or not covered by the Spatial* object, to NA (or other updatvalue).
}
\examples{

}
\references{
Wylie, C., Romney, G., Evans, D., & Erdahl, A. (1967).
  Half-tone perspective drawings by computer. Proceedings of the November
  14-16, 1967, Fall Joint Computer Conference. AFIPS '67 (Fall).
  <https://dx.doi.org/10.1145/1465611.1465619>
}
